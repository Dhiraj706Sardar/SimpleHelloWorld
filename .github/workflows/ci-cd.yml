name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2-
        
    - name: Build with Maven
      run: mvn  clean package -DskipTests
      
    - name: Run tests
      run: mvn test
      
    - name: Run security scan
      run: |
        if [ -f "src/main/resources/dependency-check-suppression.xml" ]; then
          docker run --rm -v ${PWD}:/src owasp/dependency-check:latest --project "devops-spring-app" \
            --format "HTML,JSON" \
            --out "target/dependency-check-report.html" \
            --suppression "src/main/resources/dependency-check-suppression.xml"
        else
          echo "Warning: dependency-check-suppression.xml not found, skipping security scan"
        fi
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      
    - name: Build and Push Docker image
      run: |
        mvn jib:build \
          -Djib.to.auth.username=${{ secrets.DOCKERHUB_USERNAME }} \
          -Djib.to.auth.password=${{ secrets.DOCKERHUB_TOKEN }}

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      
    - name: Configure kubectl
      run: |
        if [ -n "${{ secrets.KUBE_CONFIG }}" ]; then
          echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > kubeconfig.yaml
          export KUBECONFIG=kubeconfig.yaml
        else
          echo "Error: KUBE_CONFIG secret is not set"
          exit 1
        fi
        
    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f kubernetes/monitoring.yaml
        kubectl apply -f kubernetes/deployment.yaml
        
    - name: Verify deployment
      run: |
        kubectl rollout status deployment/devops-spring-app
        kubectl get pods
        kubectl get services