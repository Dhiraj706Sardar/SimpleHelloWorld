name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  DOCKER_IMAGE: dhiraj143/helloworld
  DOCKER_TAG: ${{ github.sha }}
  DOCKER_IMAGE_LATEST: dhiraj143/helloworld:latest

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Verify Java version
        run: java -version

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2
            ~/.maven-wrapper
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Make mvnw executable
        run: chmod +x mvnw

      - name: Build with Maven Wrapper
        run: |
          ./mvnw --version
          ./mvnw clean package -DskipTests

      - name: Run unit tests
        run: ./mvnw test

      - name: Run integration tests
        if: success()
        run: ./mvnw verify -Pintegration-tests

  build-and-push:
    needs: build-and-test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
            ${{ env.DOCKER_IMAGE_LATEST }}

      - name: Run security scan
        if: always()
        run: |
          echo "Working directory: $(pwd)"
          if [ -f "src/main/resources/dependency-check-suppression.xml" ]; then
            docker run --rm -v $(pwd):/src owasp/dependency-check:latest --project "devops-spring-app" \
              --format "HTML,JSON" \
              --out "target/dependency-check-report.html" \
              --suppression "src/main/resources/dependency-check-suppression.xml"
            
            # Upload report as artifact
            echo "Uploading security scan report..."
            echo "##[set-output name=report-path;]target/dependency-check-report.html"
          else
            echo "Warning: dependency-check-suppression.xml not found, skipping security scan"
          fi

      - name: Upload security report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: security-report
          path: target/dependency-check-report.html
          if-no-files-found: ignore
          retention-days: 5
